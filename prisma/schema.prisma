// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}
model task{
  id Int @id @default(autoincrement())
  descricao String 
  concluida Boolean @default(false)

  criadaEm DateTime @default(now())

  @@map("tasks")

}
model Nota {
  id            Int       @id @default(autoincrement())
  titulo        String
  conteudo      String
  favorita      Boolean   @default(false)
  cor           String?   
  criadaEm      DateTime  @default(now())
  atualizadaEm  DateTime  @updatedAt

  @@map("notas")
}

model Collection {
  id            Int         @id @default(autoincrement())
  name          String      @unique
  description   String?
  releaseYear   Int

//Segundo marcação de dados da tabela
  cards Card[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("collections")

}


model Card {
  id            Int         @id @default(autoincrement())
  name          String      @unique
  rarity        String
  attackPoints  Int 
  defensePoints Int
  imageUrl      String?

//primeiro configuração da tabela dependente
  collectionId  Int         @unique
  collection Collection     @relation(fields:[collectionId], references: [id], onDelete: Cascade ,onUpdate: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("cards")
}